{"meta":{"title":"tacoyu'Blog","subtitle":"记录生活中的点点滴滴","description":"坚持自己所坚持！热爱自己所热爱！","author":"Mr.L","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2020-06-27T18:52:02.000Z","updated":"2020-06-27T18:53:04.252Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Github的使用及博客的美化","slug":"Github的使用及博客的美化","date":"2020-06-27T19:20:12.000Z","updated":"2020-06-27T19:23:31.708Z","comments":true,"path":"2020/06/28/Github的使用及博客的美化/","link":"","permalink":"http://yoursite.com/2020/06/28/Github%E7%9A%84%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BE%8E%E5%8C%96/","excerpt":"","text":"[TOC] 一、绪论1.1 目的借助github托管项目代码 GitHub是全球最大的社交编程及代码托管网站； 可以托管各种git库，并提供一个web界面； 1.2 基本概念仓库(Repository)仓库即你的项目，在github上开源一个项目，就必须新建一个Repository； 收藏(Star)仓库主页star按钮，意思为收藏该项目的人数，一个项目有100个star都算很不容易了； 复制项目(Fork) 建立一份和别人一模一样的仓库，独立存在； 发起请求(Pull Request)若李四在这个仓库里进行修改，随后李四可以在自己仓库中点击 Pull Request 来请求张三合并仓库(待张三查看后确认合并后才执行)； 关注(Watch)关注某人或者某个项目，一旦项目有任何更新，则会收到提醒； 事务卡片(Issue)发现代码BUG，但是目前没有成型代码，需要讨论时使用； 1.3 注册 现在不管是私有还是公开都是免费的了！！！ 1.4 Notice1、因为 github 在国外服务器，所以访问速度较慢或者无法访问，需要翻墙(软件: Shadowsocks)； 2、私有仓库只能自己和指定的朋友才有权限操作； 二、仓库Repository2.1 创建仓库 2.2 仓库介绍 2.3 仓库管理创建文件 修改文件 +号代表新增的，-号代表删除的； 删除文件 上传文件 搜索文件 或者快捷键T 下载/检出项目 2.4 github Issues出现问题时，讨论使用； A在看B的仓库时，发现其中存在的问题，然后新建一个Issue，然后B的主页就会显示此Issue； 先谢谢 有问题就提 然后觉得没问题了就可以close 双方都可以close； 2.5 开源项目贡献流程1、新建Issue 提交使用问题或者建议、想法； 2、Pull Request 1）fork项目； 2）修改自己仓库的项目代码； 3）新建 pull Request； 4）等待作者操作审核，合并； 三、Git安装和使用3.1 目的通过 git 管理 github 托管项目代码 3.2 下载安装官网下载请点击 不过官网下载太慢了，给出一个网盘链接, 提取码：oiiy 一直next； 鼠标右击桌面出现两个Git 即为安装成功； 3.3 Git基础设置1、设置用户名git config –global user.name ‘用户名’ 2、设置用户名邮箱git config –global user.email ‘xxxxxx.com ‘ 初始化一次就不用初始化了！！！ 3.4 初始化Git仓库1、创建文件夹 2、在文件内初始化git（创建git仓库）选择目录命令：cd test 初始化：git init 创建了一个隐藏的文件 3.5 工作区域工作区 working Directory添加、编辑、修改文件等动作 仓库 Git Repository Git最终确定的文件保存到仓库，成为一个新的版本，并对他人可见； 暂存区暂存已经修改的文件，最后统一提交到git仓库； 3.6 常见命令cd 文件夹进入当前文件夹目录下 git status获得仓库状态 git add 文件名提交工作区的文件到暂存区 git commit -m ’提交描述‘提交暂存区的文件到git仓库 ls显示文件清单 nano 文件名对该文件内容进行修改； rm -rf 文件名删除该文件 git put提交本地仓库到git云仓库 3.7 常用操作1、向仓库提交文件1）创建文件 2）添加到暂存区 3）将文件从暂存区提交到仓库 2、修改仓库文件1）修改文件 notice： vi修改文件不太好用，建议nano修改； 2）添加到暂存区 ​ 3）提交到git仓库 3、删除仓库文件1）直接删除文件 rm -rf al.php 2）提交到暂存区 3）提交到仓库 四、 Git远程管理仓库4.1 目的作用：备份，实现代码共享集中化管理； 4.2 将本地仓库同步到git远程仓库 1、先fork到本地目的：将远程仓库（GitHub对应项目）复制到本地 代码：git clone 仓库地址 仓库地址怎么来： 成功复制到本地后： 与GitHub上的一致； 2、建立 文件，然后 提交到本地仓库后完成后提示以下内容： 3、键入 git push 完成云同步会提示登陆 github 完成操作； 登陆后依旧会要你 输入用户名和密码 全部输入后 会出现以下界面： 同时查看git仓库 发现已经提交上了 4.3 解决git push错误 config文件通过记事本打开，按图片内容修改即可； 五、Github Pages搭建个人网站5.1 访问 https://户名.github.io 5.2 搭建步骤1、创建个人站点 -&gt; 新建仓库 (仓库名必须是[ 用户名.github.io ] ) 2、在仓库下新建 index.html 的文件即可； 新建index.html文件，并输入内容 随后登陆网站可查看； Notice： 1、github pages 仅支持静态网页； 2、仓库里面只能是.html文件； 5.3 Projet Pages 项目站点https://用户名.github.io/仓库名 // 新版github好像没有； 搭建步骤1）进入项目主页，点击settings； 2）在settings里面点击choose a theme，来自动生成主题； 3）生成网页 六、博客主题及美化6.1 博客主题fork及使用博客主题的使用推荐阅读文章： Hexo博客优化之Next主题美化 使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】 6.2 博客主题美化6.2.1 设置博客首页只显示摘要（不显示全文）本人使用next主题； 在Next主题的_config.yml中把设置打开：(默认安装时就打开了) 123Automatically excerpt description in homepage as preamble text.excerpt_description: true 法一： 在文章的front-matter中添加description，其中description中的内容就会被显示在首页上，其余一律不显示。 12345---title: 让首页显示部分内容date: 2020-02-23 22:55:10description: 这是显示在首页的概述，正文内容均会被隐藏。--- 如果懒得写概述的话，就用方法二； 法二： 1在文章中需要截断的位置处加入 &lt;!--more--&gt; 首页就会显示这条以上的所有内容，隐藏接下来的所有内容。 这个明显就方便很多，但当然有利有弊，比如开头都是废话首页看着就不是很好看，因此我一般会先选择方法二，如果感觉文章前面的写的不太好再用方法一。 详情可参考文章： 设置hexo首页只显示部分摘要（不显示全文） 博客美化推荐阅读文章： 这篇文章的有些修改适用，有些不适用Hexo框架下用NexT(v7.0+)主题美化博客 使用 Github Pages 和 Hexo 搭建自己的独立博客【超级详细的小白教程】 Hexo-Next 主题博客个性化配置超详细，超全面(两万字)","categories":[{"name":"Github","slug":"Github","permalink":"http://yoursite.com/categories/Github/"}],"tags":[]},{"title":"搭建博客的第一天","slug":"搭建博客的第一天","date":"2020-06-27T17:12:12.000Z","updated":"2020-06-27T19:18:04.284Z","comments":true,"path":"2020/06/28/搭建博客的第一天/","link":"","permalink":"http://yoursite.com/2020/06/28/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/","excerpt":"​ 今天其实挺充实的，在研究了一番关于在线试衣系统的论文之后，我便想在Github上看有没有相关的项目； 但因为自己仅仅注册了一个Github账号而寸步难行，所以花了几个小时来学习了github的使用，以及搭建了属于自己的博客，只能算是初步知道是怎么一回事；","text":"​ 今天其实挺充实的，在研究了一番关于在线试衣系统的论文之后，我便想在Github上看有没有相关的项目； 但因为自己仅仅注册了一个Github账号而寸步难行，所以花了几个小时来学习了github的使用，以及搭建了属于自己的博客，只能算是初步知道是怎么一回事；因为分支我还不懂，以及自己博客的完善还需要多磨练，在日后慢慢积累吧； 能拥有一个这样的博客真的很开心，感觉比CSDN那些强多了！ 加油吧！ 湖大学子！","categories":[{"name":"life","slug":"life","permalink":"http://yoursite.com/categories/life/"}],"tags":[{"name":"privacy","slug":"privacy","permalink":"http://yoursite.com/tags/privacy/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-27T16:46:49.185Z","updated":"2020-06-27T18:42:26.250Z","comments":true,"path":"2020/06/28/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/28/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","categories":[],"tags":[]}],"categories":[{"name":"Github","slug":"Github","permalink":"http://yoursite.com/categories/Github/"},{"name":"life","slug":"life","permalink":"http://yoursite.com/categories/life/"}],"tags":[{"name":"privacy","slug":"privacy","permalink":"http://yoursite.com/tags/privacy/"}]}